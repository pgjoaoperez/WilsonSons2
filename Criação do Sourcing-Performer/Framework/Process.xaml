<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:stj="clr-namespace:System.Text.Json;assembly=System.Text.Json" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ug="clr-namespace:UiPath.GSuite;assembly=UiPath.GSuite" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dt_config" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <this:Process.in_dt_config>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:Process.in_dt_config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1839,2871</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="49">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.Text.Json</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel.Model</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="43">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>System.Text.Json</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="755,2806" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="requisicao" />
      <Variable x:TypeArguments="x:String" Name="id_planilha" />
      <Variable x:TypeArguments="x:String" Name="valor_maximo_robo" />
      <Variable x:TypeArguments="x:String" Name="template_sourcing" />
      <Variable x:TypeArguments="stj:JsonElement" Name="urgencia" />
      <Variable x:TypeArguments="stj:JsonElement" Name="enderco_code" />
      <Variable x:TypeArguments="stj:JsonElement" Name="planta" />
      <Variable x:TypeArguments="stj:JsonElement" Name="commodities" />
      <Variable x:TypeArguments="stj:JsonElement" Name="tipo_requisiton" />
      <Variable x:TypeArguments="x:Boolean" Name="atualizar_sourcing" />
      <Variable x:TypeArguments="x:String" Name="data_encerramento" />
      <Variable x:TypeArguments="x:String" Name="id_sourcing" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="713,100" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[requisicao]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Requisição").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <Sequence sap2010:Annotation.AnnotationText="Esta sequência serve para ler a base de configurações (Google Sheets) e armazenar o valor máximo que o robô pode operar." DisplayName="Get Value in Sheet" sap:VirtualizedContainerService.HintSize="713,153" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="IdPlanilhaGoogle" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="434,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[id_planilha]</OutArgument>
        </ui:GetRobotAsset.Value>
      </ui:GetRobotAsset>
      <uga:GSuiteApplicationScope Account="{x:Null}" ApiKey="{x:Null}" ContinueOnError="{x:Null}" CredentialID="{x:Null}" CredentialSecret="{x:Null}" Folder="{x:Null}" SecureCredentialSecret="{x:Null}" TimeoutMS="{x:Null}" AuthenticationType="OAuthClientID" DataStoreLocation="Local disk" DisplayName="GSuite Application Scope" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="434,294" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_1" KeyPath="Google\wilsonsonstest-ce5450749885.json" KeyType="JSON" OAuthClient="UiPath" Password="notasecret" ServiceAccountEmail="wilsonsonstest@wilsonsonstest.iam.gserviceaccount.com" Services="Unselected" UserEmail="wilsonsonstest@wilsonsonstest.iam.gserviceaccount.com">
        <uga:GSuiteApplicationScope.AuthenticationScopes>
          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
            <InArgument x:TypeArguments="x:String">https://www.googleapis.com/auth/spreadsheets</InArgument>
          </scg:List>
        </uga:GSuiteApplicationScope.AuthenticationScopes>
        <uga:GSuiteApplicationScope.Body>
          <ActivityAction x:TypeArguments="ug:SimpleObjectContainer">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ug:SimpleObjectContainer" Name="GSuiteScope" />
            </ActivityAction.Argument>
            <uga:ReadCell CellValue="{x:Null}" ContinueOnError="{x:Null}" GoogleSpreadsheet="{x:Null}" AuthScopesInvalid="False" Cell="B10" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,183" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="Config" SpreadsheetId="[id_planilha]">
              <uga:ReadCell.CellValueGeneric>
                <OutArgument x:TypeArguments="x:String">[valor_maximo_robo]</OutArgument>
              </uga:ReadCell.CellValueGeneric>
            </uga:ReadCell>
          </ActivityAction>
        </uga:GSuiteApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </uga:GSuiteApplicationScope>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CoupaRequisitions workflow" sap:VirtualizedContainerService.HintSize="713,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Coupa\CoupaRequisitions.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_requisicao">[requisicao]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_id_planilha">[id_planilha]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_valor_maximo_robo">[valor_maximo_robo]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_template_sourcing">[template_sourcing]</OutArgument>
        <OutArgument x:TypeArguments="stj:JsonElement" x:Key="out_urgencia">[urgencia]</OutArgument>
        <OutArgument x:TypeArguments="stj:JsonElement" x:Key="out_endereco_code">[enderco_code]</OutArgument>
        <OutArgument x:TypeArguments="stj:JsonElement" x:Key="out_planta">[planta]</OutArgument>
        <OutArgument x:TypeArguments="stj:JsonElement" x:Key="out_commodities">[commodities]</OutArgument>
        <OutArgument x:TypeArguments="stj:JsonElement" x:Key="out_tipo_requisition">[tipo_requisiton]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CoupaDataNecessidade workflow" sap:VirtualizedContainerService.HintSize="713,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Coupa\CoupaDataNecessidade.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_requisicao">[requisicao]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CoupaDataEncerramento workflow" sap:VirtualizedContainerService.HintSize="713,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Coupa\CoupaDataEncerramento.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="out_data_encerramento">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="data_encerramento" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:IfElseIf sap2010:Annotation.AnnotationText="Caso, o tipo de requisição seja diferente de orçamento, teremos que validar se já existe um sourcing identico criado. Se sim, devemos atualiza-lo." DisplayName="Else If" sap:VirtualizedContainerService.HintSize="713,473" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
      <ui:IfElseIf.ConditionBlocks>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="If" Condition="[tipo_requisiton.Equals(&quot;Orçamento&quot;)]">
            <ui:IfElseIfBlock.Then>
              <ui:LogMessage sap:VirtualizedContainerService.HintSize="334,94" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Tipo de requisição é igual orçamento, indo para criação de Sourcing.&quot;]" />
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
          <ui:IfElseIfBlock BlockType="Else">
            <ui:IfElseIfBlock.Then>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GravarInformaçõesTabelaControle workflow" sap:VirtualizedContainerService.HintSize="347,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Excel\GravarInformaçõesTabelaControle.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_commodity">[commodities.ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_urgencia">[urgencia.ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_planta">[planta.ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_endereco_code">[enderco_code.ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_requisicao">[requisicao]</InArgument>
                  <OutArgument x:TypeArguments="x:Boolean" x:Key="out_atualizar_sourcing">[atualizar_sourcing]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_id_sourcing">[id_sourcing]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIf.ConditionBlocks>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:IfElseIf>
    <If Condition="[atualizar_sourcing]" sap:VirtualizedContainerService.HintSize="713,270" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CoupaAtualizarEvento workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Coupa\CoupaAtualizarEvento.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_requisicao">[requisicao]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_id_sourcing">[id_sourcing]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CoupaNovoEvento workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Coupa\CoupaNovoEvento.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_requisicao">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="requisicao" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_template_sourcing">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="template_sourcing" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_commodity">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="commodities.ToString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_planta">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="planta.ToString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_data_encerramento">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="data_encerramento" />
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
    <Sequence DisplayName="Add id_sourcing na Planilha" sap:VirtualizedContainerService.HintSize="713,1030" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="si:FileInfo" Name="caminho_planilha" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="544,100" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="si:FileInfo">[caminho_planilha]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="si:FileInfo">[New FileInfo("Data\Planilha_Requisicao.xlsx")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="544,798" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2" ShowExcelWindow="False">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="510,712" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[caminho_planilha.FullName]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Fazer" sap:VirtualizedContainerService.HintSize="476,446" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[requisicao]" />
                    <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[id_sourcing]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
      </ueab:ExcelProcessScopeX>
    </Sequence>
  </Sequence>
</Activity>